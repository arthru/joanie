# Generated by Django 4.0.8 on 2023-01-19 15:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import joanie.jenny.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_remove_organization_representative_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('start', models.DateField(verbose_name='start of the contract')),
                ('end', models.DateField(blank=True, default=None, null=True, verbose_name='end of the contract')),
                ('file', models.FileField(upload_to=joanie.jenny.models.contract_upload_to, verbose_name='file of the signed contract')),
                ('organization', models.ForeignKey(help_text='the organization signing the contract', on_delete=django.db.models.deletion.PROTECT, to='core.organization', verbose_name='organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('pep_number', models.CharField(max_length=255, verbose_name='Quote number in PEP')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.organization', verbose_name='Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('level', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Level')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(2023)], verbose_name='Year')),
                ('course_quantity', models.PositiveSmallIntegerField(verbose_name='Course quantity')),
                ('double_display_included', models.BooleanField(verbose_name='Double display included')),
                ('double_display_unit_price', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Double display unit price')),
                ('course_over_unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Out of package course unit price')),
                ('course_archived_open_unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Out of package archived open course unit price')),
                ('campus_new_unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Campus new course unit price')),
                ('campus_learner_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Campus unit price by learner')),
                ('fpc_fun_percent', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='FUN percentage on Continuous Professionnal Formation')),
                ('fpc_fun_mini', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='FPC minimum price')),
                ('fpc_certificate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='FPC price by certificate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('pep_number', models.CharField(max_length=255, verbose_name='Quote number in PEP')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.organization', verbose_name='Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('debit', models.PositiveIntegerField(verbose_name='Debit')),
                ('credit', models.PositiveIntegerField(verbose_name='Credit')),
                ('contract', models.ForeignKey(help_text='source of credit', on_delete=django.db.models.deletion.CASCADE, to='jenny.contract', verbose_name='contract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuoteLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('label', models.TextField(verbose_name='Label')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit price')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantity')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jenny.quote', verbose_name='Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PricingFPCbyOrg',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('range_start', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Range start')),
                ('range_end', models.PositiveSmallIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Range end')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price by learner')),
                ('minimum', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Range minimum price')),
                ('pricing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jenny.pricing', verbose_name='Pricing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('label', models.TextField(verbose_name='Label')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit price')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantity')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jenny.invoice', verbose_name='Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='pricing',
            field=models.ForeignKey(help_text='the pricing to apply with this contract', on_delete=django.db.models.deletion.PROTECT, to='jenny.pricing', verbose_name='Pricing'),
        ),
    ]
